version: "3.8"

services:
  proxy:
    image: nginx:1.27
    ports:
      - "8000:80"
      - "443:443"
      - "8443:443"
    volumes:
      - ./devops/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./devops/certs:/etc/nginx/certs
      - static_volume:/var/www/html/static
      - media_volume:/var/www/html/media
    depends_on:
      - certs
      - web
    command: >
      sh -c "
        until [ -f /etc/nginx/certs/selfsigned.crt ] &&
              [ -f /etc/nginx/certs/selfsigned.key ];
        do
          sleep 1;
        done &&
        nginx -g 'daemon off;' &
        sleep 3 &&
        echo 'ðŸš€ Your site is running at: https://localhost:8443' &&
        wait
      "

  certs:
    build:
      context: ./devops/certs
      dockerfile: Dockerfile
    volumes:
      - ./devops/certs:/certs

  web:
    build: .
    restart: always
    depends_on:
      - db
      - redis
    env_file:
      - .env
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    environment:
      - GRANIAN_INTERFACE=asginl
      - GRANIAN_HOST=0.0.0.0
      - GRANIAN_PORT=8000
      - GRANIAN_WORKERS=4
      - DEBUG=False
      - CSRF_TRUSTED_ORIGINS=https://localhost,https://0.0.0.0
      - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres
      - REDIS_CACHE_URL=redis://redis:6379/0

  migration:
    build: .
    command: python manage.py migrate
    # Start only if --profile migrate flag is supplied
    # docker compose --profile migrate up migration
    # Alternatively: docker compose exec web python manage.py migrate
    profiles:
      - migrate
    depends_on:
      - db
      - web
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres

  db:
    image: postgres:17
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres

  redis:
    image: redis:7
    restart: always
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:

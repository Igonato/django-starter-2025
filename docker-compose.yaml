services:
  certs:
    build: ./devops/certs
    volumes:
      - ./devops/certs:/certs

  web:
    build: .
    restart: always
    depends_on:
      - db
      - redis
      - s3
    env_file:
      - .env
    volumes:
      - ./devops/wait-for-it.sh:/app/wait-for-it.sh
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    environment:
      # ASGI webserver. See: https://github.com/emmett-framework/granian
      - GRANIAN_INTERFACE=asginl
      - GRANIAN_HOST=0.0.0.0
      - GRANIAN_PORT=8000
      - GRANIAN_WORKERS=4

      # Generic Django settings
      - DEBUG=True
      - CSRF_TRUSTED_ORIGINS=https://localhost,https://localhost:8443
      - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres
      - REDIS_CACHE_URL=redis://redis:6379/0

      # Configuration for django-storages
      # See: https://django-storages.readthedocs.io/en/latest/index.html
      - USE_S3=True
      - S3_CUSTOM_DOMAIN_STATIC=localhost:8443/s3/static
      - S3_CUSTOM_DOMAIN_MEDIA=localhost:8443/s3/media
      # Set during the initialisation in the devops/s3/entrypoint.sh
      - S3_ACCESS_KEY_ID=GKe8f1ee30bf22a8bc86f0d7a2
      - S3_SECRET_ACCESS_KEY=f49ac00018a30c5060dc07eeacc156781d21c67d38eadff79b52f393a1c4fd87
      # This is specified in garage.toml
      - S3_REGION_NAME=garage

    command: >
      sh -c "
        chmod +x wait-for-it.sh &&
        ./wait-for-it.sh s3:3900 --timeout=30 &&
        python manage.py collectstatic --noinput
        ./wait-for-it.sh db:5432 --timeout=30 &&
        python manage.py migrate --noinput &&
        granian config.asgi:application &
        sleep 3 &&
        echo 'ðŸš€ Your site is running at: https://localhost:8443' &&
        wait
      "

  proxy:
    image: nginx:1.27
    ports:
      - "8000:80"
      - "443:443"
      - "8443:443"
    volumes:
      - ./devops/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./devops/certs:/etc/nginx/certs
      - static_volume:/var/www/html/static
      - media_volume:/var/www/html/media
    depends_on:
      - certs
      - web
    command: >
      sh -c "
        until [ -f /etc/nginx/certs/selfsigned.crt ] &&
              [ -f /etc/nginx/certs/selfsigned.key ];
        do
          sleep 1;
        done &&
        nginx -g 'daemon off;'
      "

  db:
    image: postgres:17
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres

  redis:
    image: redis:7
    restart: always
    volumes:
      - redis_data:/data

  s3:
    build:
      context: .
      dockerfile: ./devops/s3/Dockerfile

    # ports:
    #   - "3900:3900" # S3 API
    #   - "3901:3901" # Admin API
    #   - "3902:3902" # Web server for buckets
    #   - "3903:3903" # Admin API server
    #   - "3904:3904" # K2V API

    volumes:
      - ./devops/s3/garage-dev-config.toml:/etc/garage.toml
      - garage_data:/var/lib/garage/data
      - garage_meta:/var/lib/garage/meta

volumes:
  garage_data:
  garage_meta:
  media_volume:
  postgres_data:
  redis_data:
  static_volume:
